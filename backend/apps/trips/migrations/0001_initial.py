# Generated by Django 5.2.4 on 2025-07-16 16:11

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Trip",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                ("description", models.TextField(blank=True)),
                (
                    "route_type",
                    models.CharField(
                        choices=[
                            ("fastest", "Fastest Route"),
                            ("scenic", "Scenic Route"),
                            ("custom", "Custom Route"),
                        ],
                        default="fastest",
                        max_length=20,
                    ),
                ),
                (
                    "total_distance",
                    models.FloatField(default=0, help_text="Total distance in miles"),
                ),
                (
                    "total_time",
                    models.FloatField(default=0, help_text="Total time in hours"),
                ),
                (
                    "estimated_fuel_cost",
                    models.FloatField(
                        default=0, help_text="Estimated fuel cost in USD"
                    ),
                ),
                ("start_date", models.DateField(blank=True, null=True)),
                ("end_date", models.DateField(blank=True, null=True)),
                (
                    "is_public",
                    models.BooleanField(
                        default=False, help_text="Whether this trip is publicly visible"
                    ),
                ),
                (
                    "fuel_efficiency",
                    models.FloatField(
                        default=25.0,
                        help_text="Vehicle fuel efficiency in MPG",
                        validators=[
                            django.core.validators.MinValueValidator(5.0),
                            django.core.validators.MaxValueValidator(100.0),
                        ],
                    ),
                ),
                (
                    "fuel_price_per_gallon",
                    models.FloatField(
                        default=3.5,
                        help_text="Fuel price per gallon in USD",
                        validators=[
                            django.core.validators.MinValueValidator(1.0),
                            django.core.validators.MaxValueValidator(10.0),
                        ],
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "shared_with",
                    models.ManyToManyField(
                        blank=True,
                        related_name="shared_trips",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="trips",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-updated_at"],
            },
        ),
        migrations.CreateModel(
            name="Stop",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                ("address", models.TextField()),
                ("latitude", models.FloatField()),
                ("longitude", models.FloatField()),
                (
                    "place_id",
                    models.CharField(
                        blank=True, help_text="External API place ID", max_length=200
                    ),
                ),
                (
                    "stop_type",
                    models.CharField(
                        choices=[
                            ("start", "Starting Point"),
                            ("destination", "Destination"),
                            ("waypoint", "Waypoint"),
                        ],
                        default="waypoint",
                        max_length=20,
                    ),
                ),
                (
                    "order",
                    models.PositiveIntegerField(
                        help_text="Order of this stop in the trip"
                    ),
                ),
                ("arrival_time", models.TimeField(blank=True, null=True)),
                ("departure_time", models.TimeField(blank=True, null=True)),
                (
                    "duration_minutes",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="How long to spend at this stop",
                        null=True,
                    ),
                ),
                (
                    "travel_time_to_next",
                    models.FloatField(
                        blank=True,
                        help_text="Travel time to next stop in hours",
                        null=True,
                    ),
                ),
                (
                    "travel_distance_to_next",
                    models.FloatField(
                        blank=True,
                        help_text="Travel distance to next stop in miles",
                        null=True,
                    ),
                ),
                ("notes", models.TextField(blank=True)),
                (
                    "estimated_cost",
                    models.FloatField(
                        blank=True,
                        help_text="Estimated cost for activities at this stop",
                        null=True,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "trip",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="stops",
                        to="trips.trip",
                    ),
                ),
            ],
            options={
                "ordering": ["order"],
            },
        ),
        migrations.CreateModel(
            name="TripShare",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "permission_level",
                    models.CharField(
                        choices=[
                            ("view", "View Only"),
                            ("edit", "Can Edit"),
                            ("admin", "Admin Access"),
                        ],
                        default="view",
                        max_length=10,
                    ),
                ),
                ("shared_at", models.DateTimeField(auto_now_add=True)),
                ("is_active", models.BooleanField(default=True)),
                (
                    "message",
                    models.TextField(
                        blank=True, help_text="Optional message when sharing"
                    ),
                ),
                (
                    "shared_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="sent_trip_shares",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "shared_with",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="received_trip_shares",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "trip",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="shares",
                        to="trips.trip",
                    ),
                ),
            ],
        ),
        migrations.AddIndex(
            model_name="trip",
            index=models.Index(
                fields=["user", "-updated_at"], name="trips_trip_user_id_8e32dc_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="trip",
            index=models.Index(
                fields=["is_public", "-updated_at"],
                name="trips_trip_is_publ_a28a53_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="stop",
            index=models.Index(
                fields=["trip", "order"], name="trips_stop_trip_id_1223d1_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="stop",
            index=models.Index(
                fields=["latitude", "longitude"], name="trips_stop_latitud_d40d24_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="stop",
            unique_together={("trip", "order")},
        ),
        migrations.AddIndex(
            model_name="tripshare",
            index=models.Index(
                fields=["shared_with", "is_active"],
                name="trips_trips_shared__3dcc98_idx",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="tripshare",
            unique_together={("trip", "shared_with")},
        ),
    ]
